# Exploit Chain
- Place a pointer to a function to call at cl.skin.
- Overwrite the capacity member of client.messages.
- Send a message to myself (/me) to overflow the messages into demorecord's vtable and point it to cl.skin.
# &SKIN MIGHT NOT BE ASCII. (flood clients until is?)



# Requirements
- Heap infoleak.



# Lead
- Pivot the stack into the heap, copy $rsi to $rdi, call system.
- There appears to be a heap address after `name` after a client connects.
- Corrupt msgsizelookup::sizetable, and then use the QUEUE_MSG to write non-ASCII to messages.



# Ideas
- Overwriting the NULL terminator of name on client for infoleak purposes.



# Desperate
- Try to exploit the heap overflow not as the first client.



# Unclear



# Notes
- The other member that is being overwritten at spawnstate is events' buf.



# History
- Change the size of alen "legitimately" in order to get a different bin and see what memory lays there.
- Parse all vtables in the executable (didn't work because cannot partially overwrite pointer to point to a different vtable)

